{"version":3,"file":"diagram.js","sources":["es6/Integer2.js","es6/Float2.js","es6/Diagram.js"],"sourcesContent":["export class Integer2 {\n    constructor(x = 0, y = 0) {\n        this.x = x;\n        this.y = y;\n    }\n    get value() {\n        return [this.x, this.y];\n    }\n    distance(b) {\n        return Math.floor((Math.abs(this.x - b.x) + Math.abs(this.y - b.y)) / 2);\n    }\n    toString() {\n        return this.value.toString();\n    }\n    equals(p) {\n        return (this.x === p.x) && (this.y === p.y);\n    }\n    add(p) {\n        return new Integer2(this.x + p.x, this.y + p.y);\n    }\n    scale(d) {\n        return new Integer2(this.x * d, this.y * d);\n    }\n    cubeLength() {\n        return Math.floor((Math.abs(this.x) + Math.abs(this.y)) / 2);\n    }\n}\n//# sourceMappingURL=Integer2.js.map","import { Integer2 } from './Integer2';\nexport class Float2 {\n    constructor(x = 0, y = 0) {\n        this.x = x;\n        this.y = y;\n    }\n    static ROUND(h) {\n        const rx = Math.round(h.x);\n        const ry = Math.round(h.y);\n        return new Integer2(rx, ry);\n    }\n    static LERP(a, b, t) {\n        return new Float2(a.x + (b.x - a.x) * t, a.y + (b.y - a.y) * t);\n    }\n    static LINE(a, b) {\n        const N = a.distance(b);\n        const results = [];\n        for (let i = 0; i < (N + 1); i++) {\n            results.push(Float2.ROUND(Float2.LERP(a, b, 1 / Math.max(1, N) * i)));\n        }\n        return results;\n    }\n    equals(p) {\n        return (this.x === p.x) && (this.y === p.y);\n    }\n    get value() {\n        return [this.x, this.y];\n    }\n    scale(k) {\n        return new Float2(this.x * k, this.y * k);\n    }\n    toString() {\n        return this.value.toString();\n    }\n}\n//# sourceMappingURL=Float2.js.map","import { Float2 } from './Float2';\n/**\n * @external\n */\nexport default class Diagram {\n    constructor(svg, grid, animation = true) {\n        this.translate = new Float2();\n        this.fontSize = 14;\n        this.duration = 0;\n        this.data = {};\n        this.showPolygons = true;\n        this.showPolygonPaths = true;\n        this.showCenters = false;\n        this.showCircles = false;\n        this.showAxes = false;\n        this.showCoordinates = false;\n        this.showTiles = false;\n        this.svg = svg;\n        this.grid = grid;\n        this.animation = animation;\n        this.root = svg.append('g');\n        this.paths = svg.append('g');\n        this.init();\n    }\n    init() {\n        if (this.nodes) {\n            this.duration = 800;\n        }\n        this.initRoot();\n        this.initTiles();\n        if (this.showPolygons) {\n            this.polygons(null);\n        }\n        if (this.showCenters) {\n            this.centers(null);\n        }\n        if (this.showCircles) {\n            this.circles(null);\n        }\n        if (this.showCoordinates) {\n            this.coordinates(null);\n        }\n        if (this.showTiles) {\n            this.tiles(null);\n        }\n        if (this.showAxes) {\n            this.axes(null);\n        }\n        return this;\n    }\n    polygons(show = true) {\n        let polygons;\n        const irregular = this.grid.irregular;\n        this.polygonPaths(show);\n        if (show === false) {\n            this.all.selectAll('g.polygon').selectAll('*').remove();\n            this.showPolygons = false;\n            return this;\n        }\n        else if (show === true && !this.showPolygons) {\n            polygons = this.all.selectAll('g.polygon').append('polygon');\n            this.showPolygons = true;\n        }\n        else if (show !== true) {\n            this.tilesEnter.selectAll('g.polygon').append('polygon');\n            polygons = this.all.selectAll('g.polygon').selectAll('*');\n            this.showPolygons = true;\n        }\n        else {\n            return this;\n        }\n        const paths = [];\n        if (!irregular) {\n            for (let i = 0; i < (this.grid.tileTypes || 0); i++) {\n                paths.push(this.shapePath(i));\n            }\n        }\n        if (this.grid.tileTypes === 1) {\n            polygons.attr('points', (node) => {\n                if (irregular) {\n                    return this.grid.vertices(false, 0, 0, this.data[node].tile).map((p) => `${p.x.toFixed(3)},${p.y.toFixed(3)}`)\n                        .join(' ');\n                }\n                else {\n                    return paths[0];\n                }\n            });\n        }\n        else {\n            polygons.attr('points', (node) => {\n                return this.grid.getTileType ? paths[this.grid.getTileType(this.data[node].tile)] : '';\n            });\n        }\n        this.transition(polygons)\n            .attr('transform', `rotate(${this.grid.orientation * this.grid.angle})`);\n        return this;\n    }\n    polygonPaths(show = true) {\n        let polygons;\n        if (show === false) {\n            this.all.selectAll('g.paths').selectAll('*').remove();\n            this.showPolygonPaths = false;\n            return;\n        }\n        else if (show === true && !this.showPolygonPaths) {\n            polygons = this.all.selectAll('g.paths').append('path');\n            this.showPolygonPaths = true;\n        }\n        else if (show !== true) {\n            this.tilesEnter.selectAll('g.paths').append('path');\n            polygons = this.all.selectAll('g.paths').selectAll('path');\n            this.showPolygonPaths = true;\n        }\n        else {\n            return;\n        }\n        polygons.attr('d', (node) => {\n            return this.grid.path ? (this.grid.path)(this.data[node].tile) : 'M 0 0';\n        });\n        this.transition(polygons)\n            .attr('transform', `rotate(${this.grid.orientation * this.grid.angle})`);\n    }\n    /**\n     * Show/hide tile center POINTS\n     * @param show\n     * @returns {Diagram}\n     */\n    centers(show = true) {\n        if (show === false) {\n            this.all.selectAll('g.center').selectAll('circle').remove();\n            this.showCenters = false;\n            return this;\n        }\n        else if (show === true && !this.showCenters) {\n            this.all.selectAll('g.center').append('circle').attr('class', 'center').attr('r', 5);\n            this.showCenters = true;\n        }\n        else if (show !== true) {\n            this.tilesEnter.selectAll('g.center').append('circle').attr('class', 'center').attr('r', 5);\n        }\n        return this;\n    }\n    circles(show = true) {\n        let circles;\n        if (show === false) {\n            this.all.selectAll('g.circle').selectAll('circle').remove();\n            this.showCircles = false;\n            return this;\n        }\n        else if (show === true && !this.showCircles) {\n            circles = this.all.selectAll('g.circle').append('circle').attr('class', 'circle');\n            this.showCircles = true;\n        }\n        else if (show !== true) {\n            this.tilesEnter.selectAll('g.circle').append('circle').attr('class', 'circle');\n            circles = this.all.selectAll('g.circle').selectAll('circle');\n            this.showCircles = true;\n        }\n        else {\n            return this;\n        }\n        this.transition(circles).attr('r', this.grid.radius);\n        return this;\n    }\n    coordinates(show = true) {\n        let tiles;\n        if (show === false) {\n            this.all.selectAll('g.coordinates').selectAll('text').remove();\n            this.showCoordinates = false;\n            return this;\n        }\n        else if (show === true && !this.showCoordinates) {\n            tiles = this.all.selectAll('g.coordinates').append('text');\n            this.showCoordinates = true;\n        }\n        else if (show !== true) {\n            this.tilesEnter.selectAll('g.coordinates').append('text');\n            tiles = this.all.selectAll('g.coordinates').selectAll('text');\n            this.showCoordinates = true;\n        }\n        else {\n            return this;\n        }\n        const that = this;\n        tiles.attr('y', '0.4em')\n            .each(function (node) {\n            const p = that.grid.toPoint(that.data[node].tile);\n            const selection = d3.select(this);\n            selection.selectAll('*').remove();\n            selection.append('tspan').attr('class', 'x').text(p.x);\n            selection.append('tspan').text(', ');\n            selection.append('tspan').attr('class', 'y').text(p.y);\n        });\n        return this;\n    }\n    axes(show = true) {\n        let tiles;\n        if (show === false) {\n            this.all.selectAll('g.axes').selectAll('text').remove();\n            this.showAxes = false;\n            return this;\n        }\n        else if (show === true && !this.showAxes) {\n            tiles = this.all.selectAll('g.axes').append('text');\n            this.showAxes = true;\n        }\n        else if (show !== true) {\n            this.tilesEnter.selectAll('g.axes').append('text');\n            tiles = this.all.selectAll('g.axes').selectAll('text');\n            this.showAxes = true;\n        }\n        else {\n            return this;\n        }\n        const that = this;\n        tiles.attr('y', '0.4em')\n            .each(function (node) {\n            const p = that.grid.toPoint(that.data[node].tile);\n            const selection = d3.select(this);\n            selection.selectAll('*').remove();\n            selection.append('tspan').attr('class', 'q').text(p.x.toString(25)\n                .replace(/./g, (t) => t === '-'\n                ? '-'\n                : String.fromCharCode(t.charCodeAt(0) + (t.charCodeAt(0) >= 97 ? 10 : 49))));\n            selection.append('tspan').attr('class', 's').text(p.y + 1);\n        });\n        return this;\n    }\n    values(data) {\n        const that = this;\n        this.all.selectAll('g.values').append('text')\n            .attr('y', '0.4em')\n            .text(function (node) {\n            const p = that.grid.toPoint(that.data[node].tile);\n            return data[that.data[node].tile.toString()];\n        });\n        return this;\n    }\n    tiles(show = true) {\n        let tiles;\n        if (show === false) {\n            this.all.selectAll('g.tiles').selectAll('text').remove();\n            this.showTiles = false;\n            return this;\n        }\n        else if (show === true && !this.showTiles) {\n            tiles = this.all.selectAll('g.tiles').append('text');\n            this.showTiles = true;\n        }\n        else if (show !== true) {\n            this.tilesEnter.selectAll('g.tiles').append('text');\n            tiles = this.all.selectAll('g.tiles').selectAll('text');\n            this.showTiles = true;\n        }\n        else {\n            return this;\n        }\n        const that = this;\n        tiles.attr('y', '0.4em')\n            .each(function (node) {\n            const selection = d3.select(this);\n            let labels = that.data[node].tile.value;\n            if (labels[0] === 0 && labels[1] === 0 && labels[2] === 0) {\n                labels = ['x', 'y', 'z'];\n            }\n            if (labels[2] === true) {\n                labels[2] = 'T';\n            }\n            else if (labels[2] === false) {\n                labels[2] = 'F';\n            }\n            selection.selectAll('*').remove();\n            selection.append('tspan').attr('class', 'q').text(labels[0]);\n            selection.append('tspan').attr('class', 's').text(labels[1]);\n            selection.append('tspan').attr('class', 'r').text(labels[2]);\n        });\n        if (this.grid.tileTypes === 1) {\n            const o = this.grid.vertices(this.grid.orientation, this.grid.scale - this.fontSize * 1.5);\n            this.all.select('.tiles .q').attr('x', o[0].x).attr('y', o[0].y + this.fontSize * 0.4);\n            this.all.select('.tiles .s').attr('x', o[2].x).attr('y', o[2].y + this.fontSize * 0.4);\n            if (o.length > 4) {\n                this.all.select('.tiles .r').attr('x', o[4].x).attr('y', o[4].y + this.fontSize * 0.4);\n            }\n            else if (o.length >= 3) {\n                this.all.select('.tiles .r').attr('x', o[1].x).attr('y', o[1].y + this.fontSize * 0.4);\n            }\n        }\n        return this;\n    }\n    /**\n     * Highlight selected tiles\n     * @param tiles Array of selected tiles\n     * @param classed Optional highlight class\n     * @returns {Diagram} For chain call\n     */\n    highlight(tiles, classed = 'highlight') {\n        const tileSet = d3.set(tiles);\n        this.all.classed(classed, (node) => {\n            return tileSet.has(this.data[node].tile);\n        });\n        return this;\n    }\n    path(tiles, color, width = 5) {\n        this.paths.selectAll('*').remove();\n        if (!tiles || !tiles.length) {\n            return this;\n        }\n        const path = this.paths.append('path')\n            .attr('d', 'M 0 0')\n            .attr('class', 'path')\n            .attr('style', `stroke: ${color}; stroke-width: ${width}px;`);\n        const d = [];\n        for (let i = 0; i < tiles.length; i++) {\n            d.push(i === 0 ? 'M' : 'L');\n            d.push(this.grid.center(tiles[i]).toString());\n        }\n        path.attr('d', d.join(' '));\n        return this;\n    }\n    lines(tiles, color, width = 5) {\n        this.paths.selectAll('*').remove();\n        if (!tiles || !tiles.length) {\n            return this;\n        }\n        const path = this.paths.selectAll('path').data(tiles).enter().append('path')\n            .attr('d', 'M 0 0')\n            .attr('class', 'path')\n            .attr('style', `stroke: ${color}; stroke-width: ${width}px;`);\n        path.attr('d', (t) => {\n            const d = [];\n            for (let i = 0; i < t.length; i++) {\n                d.push(i === 0 ? 'M' : 'L');\n                d.push(this.grid.center(t[i]).toString());\n            }\n            return d.join(' ');\n        });\n        return this;\n    }\n    search(search, fromTile = 'hsl(90, 80%, 80%)', to = 'hsl(200, 80%, 80%)') {\n        if (!search) {\n            this.all.selectAll('g.polygon').selectAll('polygon').style('fill', null);\n            return this;\n        }\n        const color = d3.interpolate(fromTile, to);\n        this.all.selectAll('g.polygon').selectAll('polygon').style('fill', (node) => {\n            const v = search.cost[this.data[node].key];\n            return (v >= 0) ? color(v / (search.max || 1)) : null;\n        });\n        return this;\n    }\n    point(xy) {\n        if (!this.pointElement) {\n            this.pointElement = this.svg.append('circle');\n            this.pointElement.attr('class', 'marker').attr('r', 5);\n        }\n        const tile = this.grid.position(new Float2(xy[0], xy[1]));\n        this.pointElement.attr('transform', `translate(${xy[0] + this.translate.x},${xy[1] + this.translate.y})`);\n        // console.log(xy, tile)\n        this.all.classed('highlight', (node) => {\n            return this.data[node].tile.equals(tile);\n        });\n        return this;\n    }\n    mousePoint() {\n        this.svg.on('mousemove', () => {\n            const xy = d3.mouse(this.root.node());\n            this.point(xy);\n        });\n        return this;\n    }\n    initRoot() {\n        const bounds = this.grid.bounds();\n        this.translate = new Float2((parseFloat(this.svg.attr('width')) - bounds.minX - bounds.maxX) / 2, (parseFloat(this.svg.attr('height')) - bounds.minY - bounds.maxY) / 2);\n        this.transition(this.root).attr('transform', `translate(${this.translate})`);\n        this.transition(this.paths).attr('transform', `translate(${this.translate})`);\n        // this.root.append(\"rect\").attr(\"class\", \"bound\")\n        // .attr(\"x\", bounds.minX).attr(\"y\", bounds.minY)\n        // .attr(\"width\", bounds.maxX - bounds.minX).attr(\"height\", bounds.maxY - bounds.minY);\n    }\n    initTiles() {\n        this.nodes = this.grid.tiles.map((n) => {\n            const d = { tile: n, key: n.toString(), tileKey: this.grid.toPoint(n).toString() };\n            this.data[d.tileKey] = d;\n            return d.tileKey;\n        });\n        this.tilesElements = this.root.selectAll('g.tile').data(this.nodes, (d) => d);\n        this.transition(this.tilesElements.exit(), 0.5).style('opacity', 0).remove();\n        const tilesEnter = this.tilesElements.enter().append('g')\n            .attr('class', 'tile')\n            .style('opacity', this.animation ? 0 : 1)\n            .attr('transform', (node) => {\n            const center = this.grid.center(this.data[node].tile);\n            return `translate(${center.x},${center.y})`;\n        });\n        tilesEnter.append('g').attr('class', 'polygon');\n        tilesEnter.append('g').attr('class', 'paths');\n        tilesEnter.append('g').attr('class', 'center');\n        tilesEnter.append('g').attr('class', 'circle');\n        tilesEnter.append('g').attr('class', 'axes');\n        tilesEnter.append('g').attr('class', 'coordinates');\n        tilesEnter.append('g').attr('class', 'tiles');\n        tilesEnter.append('g').attr('class', 'values');\n        this.transition(this.tilesElements.merge(tilesEnter)).attr('transform', (node) => {\n            const center = this.grid.center(this.data[node].tile);\n            return `translate(${center.x},${center.y})`;\n        }).style('opacity', 1);\n        this.tilesEnter = tilesEnter;\n        this.all = this.tilesEnter.merge(this.tilesElements);\n    }\n    shapePath(tileType) {\n        return this.grid.vertices(undefined, undefined, tileType).map((p) => `${p.x.toFixed(3)},${p.y.toFixed(3)}`)\n            .join(' ');\n    }\n    transition(selection, delta = 1) {\n        return ((this.animation && (this.duration * delta))\n            ? selection.transition().duration(this.duration * delta)\n            : selection);\n    }\n}\n//# sourceMappingURL=Diagram.js.map"],"names":["Integer2","x","y","b","Math","floor","abs","value","toString","p","d","Float2","k","h","rx","round","ry","a","t","N","distance","results","i","push","ROUND","LERP","max","Diagram","svg","grid","animation","translate","fontSize","duration","data","showPolygons","showPolygonPaths","showCenters","showCircles","showAxes","showCoordinates","showTiles","root","append","paths","init","nodes","initRoot","initTiles","polygons","centers","circles","coordinates","tiles","axes","show","irregular","polygonPaths","all","selectAll","remove","tilesEnter","tileTypes","shapePath","attr","node","vertices","tile","map","toFixed","join","getTileType","transition","orientation","angle","path","radius","that","each","toPoint","selection","d3","select","text","replace","String","fromCharCode","charCodeAt","labels","o","scale","length","classed","tileSet","set","has","color","width","center","enter","search","fromTile","to","style","interpolate","v","cost","key","xy","pointElement","position","equals","on","mouse","point","bounds","parseFloat","minX","maxX","minY","maxY","n","tileKey","tilesElements","exit","merge","tileType","undefined","delta"],"mappings":"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"}